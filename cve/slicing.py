# -*- coding: UTF-8 -*-
import re
import config
import time


class Handle():
    def __init__(self, data, *args, **kwargs):
        self.data = data
        self.rule = config.rule

    def section(self):
        start_flag = self.rule.get("start")
        end_flag = self.rule.get("end")
        i = 0
        feed = []
        while True:
            start = start_flag.format(i)
            end = end_flag.format(i+1)
            alone_data = re.findall(r"{}(.*?){}".format(start, end), self.data, re.S)
            if alone_data:
                feed.append(alone_data[0])
                i += 1
            else:
                alone_data = re.findall(r"{}(.*?)$".format(start), self.data, re.S)
                if alone_data:
                    feed.append(alone_data[0])
                break

        return feed

    def handle(self):
        cve_data = []
        time_start = config.rule.get("time")[0]
        end_time = config.rule.get("time")[1]
        down = config.rule.get("down")
        sec_data = self.section()
        for alonde_data in sec_data:
            data = {}
            _updated = re.findall(r"{}(.+?){}".format(time_start, end_time), str(alonde_data), re.S)
            if _updated:
                updated = re.findall(r"{}(.*?)$".format(time_start), str(_updated[0]))[0].strip()            # time
                data["updated"] = time.strptime(updated, '%m/%d/%Y; %I:%M:%S %p')
            else:
                # 没有更新时间就默认更新
                data["updated"] = time.strptime('12/30/2050; 12:12:12 AM', '%m/%d/%Y; %I:%M:%S %p')
            _url = re.findall(r"{}".format(down), alonde_data)
            down_url = "https://nvd.nist.gov" + str(_url[0])                                             # url

            name = down_url.split("/")[-1]
            data["name"] = name
            data["down_url"] = down_url
            cve_data.append(data)

        return cve_data





