# -*- coding: UTF-8 -*-
import config
import requests
from cwe.slicing import Handle
import time
from inter_down import FromNetGetDate
from cwe.readcsv import readcsv
import pymongo
import os
import json


def update_time():
    path = os.path.join(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")), "log")
    with open(os.path.join(path, "last_update.json"), "r") as f:
        data = json.load(f)
    data["cwe_last_time"] = time.time()
    with open(os.path.join(path, "last_update.json"), "w") as f:
        json.dump(data, f)


def main(log):
    save = False
    col = pymongo.MongoClient(config.mongodb)["csr"]["weakness"]
    down = FromNetGetDate()
    log.info('cwe检查更新')
    data = requests.request(method="GET", url=config.cwe_url, verify=False).text
    update = Handle.handle(data)
    if update < time.localtime(config.last_update.get("cwe_last_time", 0)):
        log.info(f'未检测到更新')
        update_time()
        return
    url_list = Handle.get_url_list(data)
    if not url_list:
        log.info(f'未检测到下载列表')
        update_time()
        return
    log.info(f"检查到更新,开始下载,下载列表:{url_list}")
    for url in url_list:
        log.info(f"下载开始：{url} ")
        path = down.cwe_download(url=url)
        cwe_list = readcsv(path)
        for cwe in cwe_list:
            try:
                col.update_one({'cwe_id': cwe['cwe_id']}, {'$set': cwe}, upsert=True)
            except:
                col = pymongo.MongoClient(config.mongodb)["csr"]["weakness"]
                col.update_one({'cwe_id': cwe['cwe_id']}, {'$set': cwe}, upsert=True)
        log.info(f"下载成功，上传数据库")
        if not save:
            os.remove(path)
    update_time()
    log.info(f'cwe更新成功')


from log import CweLog
if __name__ == '__main__':
    cwe_log = CweLog()
    main(cwe_log)
